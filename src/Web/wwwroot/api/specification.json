{
  "x-generator": "NSwag v14.2.0.0 (NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "PokemonInHomeAPI API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Pokemons": {
      "get": {
        "tags": [
          "Pokemons"
        ],
        "operationId": "GetPokemonsWithPagination",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfPokemonDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Pokemons"
        ],
        "operationId": "CreatePokemon",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePokemonCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Pokemons/{id}": {
      "get": {
        "tags": [
          "Pokemons"
        ],
        "operationId": "GetPokemonById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PokemonDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Pokemons"
        ],
        "operationId": "UpdatePokemon",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePokemonCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Pokemons"
        ],
        "operationId": "DeletePokemon",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoItems": {
      "get": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "GetTodoItemsWithPagination",
        "parameters": [
          {
            "name": "ListId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfTodoItemBriefDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "CreateTodoItem",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoItemCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoItems/{id}": {
      "put": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "UpdateTodoItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoItemCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "DeleteTodoItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoItems/UpdateDetail/{id}": {
      "put": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "UpdateTodoItemDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoItemDetailCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoLists": {
      "get": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "GetTodoLists",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodosVm"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "CreateTodoList",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoListCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoLists/{id}": {
      "put": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "UpdateTodoList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoListCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "DeleteTodoList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersRegister",
        "requestBody": {
          "x-name": "registration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersLogin",
        "parameters": [
          {
            "name": "useCookies",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "useSessionCookies",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "login",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/refresh": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersRefresh",
        "requestBody": {
          "x-name": "refreshRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/confirmEmail": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetApiUsersConfirmEmail",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "changedEmail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/resendConfirmationEmail": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersResendConfirmationEmail",
        "requestBody": {
          "x-name": "resendRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendConfirmationEmailRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/forgotPassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersForgotPassword",
        "requestBody": {
          "x-name": "resetRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/resetPassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersResetPassword",
        "requestBody": {
          "x-name": "resetRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/manage/2fa": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersManage2fa",
        "requestBody": {
          "x-name": "tfaRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFactorRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Users/manage/info": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetApiUsersManageInfo",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersManageInfo",
        "requestBody": {
          "x-name": "infoRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfoRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/WeatherForecasts": {
      "get": {
        "tags": [
          "WeatherForecasts"
        ],
        "operationId": "GetWeatherForecasts",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "PaginatedListOfPokemonDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PokemonDto"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "PokemonDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type1": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PokemonType"
              }
            ]
          },
          "type2": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PokemonType"
              }
            ]
          },
          "baseId": {
            "type": "integer",
            "format": "int32"
          },
          "baseAttack": {
            "type": "integer",
            "format": "int32"
          },
          "baseDefense": {
            "type": "integer",
            "format": "int32"
          },
          "baseSpeed": {
            "type": "integer",
            "format": "int32"
          },
          "baseSpecialAttack": {
            "type": "integer",
            "format": "int32"
          },
          "baseSpecialDefense": {
            "type": "integer",
            "format": "int32"
          },
          "pokemons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pokemon"
            }
          },
          "pokedex": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pokedex"
            }
          }
        }
      },
      "PokemonType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ValueObject"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        ]
      },
      "ValueObject": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "Pokemon": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "speciesId": {
                "type": "integer",
                "format": "int32"
              },
              "level": {
                "type": "integer",
                "format": "int32"
              },
              "ivHp": {
                "type": "integer",
                "format": "int32"
              },
              "ivAttack": {
                "type": "integer",
                "format": "int32"
              },
              "ivDefense": {
                "type": "integer",
                "format": "int32"
              },
              "ivSpeed": {
                "type": "integer",
                "format": "int32"
              },
              "ivSpecialAttack": {
                "type": "integer",
                "format": "int32"
              },
              "ivSpecialDefense": {
                "type": "integer",
                "format": "int32"
              },
              "evHp": {
                "type": "integer",
                "format": "int32"
              },
              "evDefense": {
                "type": "integer",
                "format": "int32"
              },
              "evSpecialAttack": {
                "type": "integer",
                "format": "int32"
              },
              "evSpecialDefense": {
                "type": "integer",
                "format": "int32"
              },
              "evSpeed": {
                "type": "integer",
                "format": "int32"
              },
              "currentHp": {
                "type": "integer",
                "format": "int32"
              },
              "species": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PokemonSpecies"
                  }
                ]
              },
              "playerPokemons": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PlayerPokemon"
                }
              },
              "pokemonMoves": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PokemonMove"
                }
              },
              "battlePokemons": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BattlePokemon"
                }
              },
              "tradePokemons": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TradePokemon"
                }
              }
            }
          }
        ]
      },
      "PokemonSpecies": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "type1": {
                "$ref": "#/components/schemas/PokemonType"
              },
              "type2": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PokemonType"
                  }
                ]
              },
              "baseHp": {
                "type": "integer",
                "format": "int32"
              },
              "baseAttack": {
                "type": "integer",
                "format": "int32"
              },
              "baseDefense": {
                "type": "integer",
                "format": "int32"
              },
              "baseSpeed": {
                "type": "integer",
                "format": "int32"
              },
              "baseSpecialAttack": {
                "type": "integer",
                "format": "int32"
              },
              "baseSpecialDefense": {
                "type": "integer",
                "format": "int32"
              },
              "pokemons": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Pokemon"
                }
              },
              "pokedexes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Pokedex"
                }
              }
            }
          }
        ]
      },
      "Pokedex": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "playerId": {
                "type": "integer",
                "format": "int32"
              },
              "speciesId": {
                "type": "integer",
                "format": "int32"
              },
              "seen": {
                "type": "boolean"
              },
              "caught": {
                "type": "boolean"
              },
              "player": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Player"
                  }
                ]
              },
              "species": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PokemonSpecies"
                  }
                ]
              }
            }
          }
        ]
      },
      "Player": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "applicationUserId": {
                "type": "string"
              },
              "playerPokemons": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PlayerPokemon"
                }
              },
              "pokedexes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Pokedex"
                }
              },
              "playerItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PlayerItem"
                }
              },
              "player1Battles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Battle"
                }
              },
              "player2Battles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Battle"
                }
              },
              "player1Trades": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Trade"
                }
              },
              "player2Trades": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Trade"
                }
              }
            }
          }
        ]
      },
      "PlayerPokemon": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "playerId": {
                "type": "integer",
                "format": "int32"
              },
              "pokemonId": {
                "type": "integer",
                "format": "int32"
              },
              "isActive": {
                "type": "boolean"
              },
              "nickname": {
                "type": "string"
              },
              "caughtAt": {
                "type": "string",
                "format": "date-time"
              },
              "player": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Player"
                  }
                ]
              },
              "pokemon": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Pokemon"
                  }
                ]
              }
            }
          }
        ]
      },
      "BaseAuditableEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEntity"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "created": {
                "type": "string",
                "format": "date-time"
              },
              "createdBy": {
                "type": "string",
                "nullable": true
              },
              "lastModified": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BaseEntity": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "domainEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseEvent"
            }
          }
        }
      },
      "BaseEvent": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "PlayerItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "playerId": {
            "type": "integer",
            "format": "int32"
          },
          "itemId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "player": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Player"
              }
            ]
          },
          "item": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Item"
              }
            ]
          }
        }
      },
      "Item": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/ItemType"
              },
              "playerItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PlayerItem"
                }
              }
            }
          }
        ]
      },
      "ItemType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Pokeball",
          "Healing",
          "Battle",
          "Key"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "Battle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "player1Id": {
                "type": "integer",
                "format": "int32"
              },
              "player2Id": {
                "type": "integer",
                "format": "int32"
              },
              "winnerId": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "battleDate": {
                "type": "string",
                "format": "date-time"
              },
              "player1": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Player"
                  }
                ]
              },
              "player2": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Player"
                  }
                ]
              },
              "winner": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Player"
                  }
                ]
              },
              "battlePokemons": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BattlePokemon"
                }
              }
            }
          }
        ]
      },
      "BattlePokemon": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "battleId": {
            "type": "integer",
            "format": "int32"
          },
          "pokemonId": {
            "type": "integer",
            "format": "int32"
          },
          "playerId": {
            "type": "integer",
            "format": "int32"
          },
          "battle": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Battle"
              }
            ]
          },
          "pokemon": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pokemon"
              }
            ]
          },
          "player": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Player"
              }
            ]
          }
        }
      },
      "Trade": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "player1Id": {
                "type": "integer",
                "format": "int32"
              },
              "player2Id": {
                "type": "integer",
                "format": "int32"
              },
              "tradeDate": {
                "type": "string",
                "format": "date-time"
              },
              "player1": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Player"
                  }
                ]
              },
              "player2": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Player"
                  }
                ]
              },
              "tradePokemons": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TradePokemon"
                }
              }
            }
          }
        ]
      },
      "TradePokemon": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tradeId": {
            "type": "integer",
            "format": "int32"
          },
          "pokemonId": {
            "type": "integer",
            "format": "int32"
          },
          "playerId": {
            "type": "integer",
            "format": "int32"
          },
          "trade": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Trade"
              }
            ]
          },
          "pokemon": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pokemon"
              }
            ]
          },
          "player": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Player"
              }
            ]
          }
        }
      },
      "PokemonMove": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pokemonId": {
            "type": "integer",
            "format": "int32"
          },
          "moveId": {
            "type": "integer",
            "format": "int32"
          },
          "slot": {
            "type": "integer",
            "format": "int32"
          },
          "currentPp": {
            "type": "integer",
            "format": "int32"
          },
          "pokemon": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Pokemon"
              }
            ]
          },
          "move": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Move"
              }
            ]
          }
        }
      },
      "Move": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/PokemonType"
              },
              "power": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "accuracy": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "pp": {
                "type": "integer",
                "format": "int32"
              },
              "pokemonMoves": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PokemonMove"
                }
              }
            }
          }
        ]
      },
      "CreatePokemonCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "type1": {
            "type": "string",
            "nullable": true
          },
          "type2": {
            "type": "string",
            "nullable": true
          },
          "baseHp": {
            "type": "integer",
            "format": "int32"
          },
          "baseAttack": {
            "type": "integer",
            "format": "int32"
          },
          "baseDefense": {
            "type": "integer",
            "format": "int32"
          },
          "baseSpecialAttack": {
            "type": "integer",
            "format": "int32"
          },
          "baseSpecialDefense": {
            "type": "integer",
            "format": "int32"
          },
          "baseSpeed": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdatePokemonCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type1": {
            "type": "string",
            "nullable": true
          },
          "type2": {
            "type": "string",
            "nullable": true
          },
          "baseHp": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseAttack": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseDefense": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseSpecialAttack": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseSpecialDefense": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseSpeed": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "PaginatedListOfTodoItemBriefDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoItemBriefDto"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "TodoItemBriefDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "listId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "done": {
            "type": "boolean"
          }
        }
      },
      "CreateTodoItemCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "listId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateTodoItemCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "done": {
            "type": "boolean"
          }
        }
      },
      "UpdateTodoItemDetailCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "listId": {
            "type": "integer",
            "format": "int32"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityLevel"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PriorityLevel": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "None",
          "Low",
          "Medium",
          "High"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "TodosVm": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "priorityLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LookupDto"
            }
          },
          "lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoListDto"
            }
          }
        }
      },
      "LookupDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TodoListDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "colour": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoItemDto"
            }
          }
        }
      },
      "TodoItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "listId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "done": {
            "type": "boolean"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateTodoListCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateTodoListCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "HttpValidationProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProblemDetails"
          },
          {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "properties": {
              "errors": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "AccessTokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tokenType": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "twoFactorRecoveryCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "ResendConfirmationEmailRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "resetCode": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "TwoFactorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sharedKey": {
            "type": "string"
          },
          "recoveryCodesLeft": {
            "type": "integer",
            "format": "int32"
          },
          "recoveryCodes": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "isTwoFactorEnabled": {
            "type": "boolean"
          },
          "isMachineRemembered": {
            "type": "boolean"
          }
        }
      },
      "TwoFactorRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enable": {
            "type": "boolean",
            "nullable": true
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "resetSharedKey": {
            "type": "boolean"
          },
          "resetRecoveryCodes": {
            "type": "boolean"
          },
          "forgetMachine": {
            "type": "boolean"
          }
        }
      },
      "InfoResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "isEmailConfirmed": {
            "type": "boolean"
          }
        }
      },
      "InfoRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "newEmail": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "oldPassword": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WeatherForecast": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32"
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "http",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}